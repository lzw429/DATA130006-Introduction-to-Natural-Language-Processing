#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\begin_preamble
%! Author = Yiheng Shu
%! Date = 2019-08-01

\usepackage{authblk}
% \usepackage[UTF8]{ctex}

\title{Spelling Correction}
\author[*]{Yiheng Shu}
\affil[*]{Software College, Northeastern University, China}
\date{July 2019}

\usepackage{graphicx}
\end_preamble
\use_default_options false
\maintain_unincluded_children false
\language english
\language_package none
\inputencoding auto
\fontencoding default
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 0
\use_package cancel 0
\use_package esint 1
\use_package mathdots 0
\use_package mathtools 0
\use_package mhchem 0
\use_package stackrel 0
\use_package stmaryrd 0
\use_package undertilde 0
\cite_engine natbib
\cite_engine_type authoryear
\biblio_style plainnat
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
maketitle
\end_layout

\end_inset


\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "sec:introduction"

\end_inset

 This report is for 
\shape italic
Homework 1: Spelling Correction
\shape default
 of 
\shape italic
DATA130006: Introduction to Natural Language Processing
\shape default
.
\end_layout

\begin_layout Standard
The project attempted to correct the spelling of a piece of English news
 text.
 The types of spelling errors are mainly divided into 
\series bold
non-word errors
\series default
 and 
\series bold
real word errors
\series default
.
\end_layout

\begin_layout Standard
For non-word errors, the words that need to be checked are compared to all
 words in the vocabulary, and words that are not in the vocabulary must
 be non-word errors.
 The rest of the words appear in the vocabulary, which may be real word
 errors or correct words.
\end_layout

\begin_layout Standard
The algorithms involved in this project are mainly the noisy-channel model
 and the language model.
\end_layout

\begin_layout Section
Algorithm
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "sec:algorithm"

\end_inset


\end_layout

\begin_layout Standard
From the perspective of code implementation, the flow of program execution
 is as follows.
\end_layout

\begin_layout Standard
1) Preprocess.
 The program downloads nltk Reuters corpus and count the corpus for n-gram.
 In the program, preprocessing involves loading the confusion matrix and
 vocabulary from an external files.
\end_layout

\begin_layout Standard
2) Noisy channel model.
 In this model, the goal is to find the intended word given a word where
 the letters have been scrambled in some manner.
 Given an alphabet 
\begin_inset Formula $\Sigma$
\end_inset

, let 
\begin_inset Formula $\Sigma^{*}$
\end_inset

 be the set of all finite strings over 
\begin_inset Formula $\Sigma$
\end_inset

.
 Let the dictionary 
\begin_inset Formula $D$
\end_inset

 of valid words be some subset of 
\begin_inset Formula $\Sigma^{*}$
\end_inset

, i.e., 
\begin_inset Formula $D\subseteq\Sigma^{*}$
\end_inset

.
 The noisy channel is the matrix
\end_layout

\begin_layout Standard
\begin_inset Formula $\varGamma_{ws}=P(s|w)$
\end_inset

,
\end_layout

\begin_layout Standard
where 
\begin_inset Formula $\omega\in D$
\end_inset

 is the intended word and 
\begin_inset Formula $s\in\Sigma^{*}$
\end_inset

 is the scrambled word that was actually received.
\end_layout

\begin_layout Standard
3) N-gram language model.
 Considering both the model effect and the computational performance, the
 program uses the Bigram model, which is a form of n = 2 in the n-gram model.
 Bigrams help provide the conditional probability of a token given the preceding
 token, when the relation of the conditional probability is applied: 
\begin_inset Formula 
\[
P(W_{n}|W_{n-1})=\frac{P(W_{n-1},W_{n})}{P(W_{n-1})}
\]

\end_inset


\end_layout

\begin_layout Section
Implementation Details
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "sec:implementation-details"

\end_inset


\end_layout

\begin_layout Standard
In the process of algorithm implementation, there are some details that
 need to be considered.
 These problems may not be considered in the design of the algorithm, but
 they occur during program debugging.
\end_layout

\begin_layout Subsection
The Integrity of Vocabulary
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "subsec:the-integrity-of-vocabulary"

\end_inset


\end_layout

\begin_layout Standard
The first is the integrity of the thesaurus given by the title.
 For checking for non-word errors, the larger the lexicon, the better.
 The lexicon given by the title has a total of more than 48,000 lines.
 Excluding the repetition of uppercase and lowercase words, it actually
 contains more than 20,000 common words.
\end_layout

\begin_layout Standard
In natural language, vocabulary does not always appear as a root.
 Nouns may be plural, and verbs may be in the form of third-person singular
 forms, past participles, and present participles.
 Each word may be followed by punctuation marks such as commas, periods,
 and question marks, as well as suffixes required for grammars such as tenses
 and possessives.
\end_layout

\begin_layout Standard
The given vocabulary includes nouns with capitalized initials, nouns in
 plural, and third-person singular forms of verbs.
 When the program judges a non-word error, it first removes the suffix of
 the word and converts it into the form contained in the vocabulary.
 After finding the word with the highest probability in the vocabulary,
 the separated suffix is added to the end of this corrected word.
\end_layout

\begin_layout Standard
Some common words are not included in the vocabulary, such as 
\shape italic
won't
\shape default
, 
\shape italic
don't
\shape default
 and 
\shape italic
can't
\shape default
, so they are manually added to the vocabulary.
\end_layout

\begin_layout Subsection
Confusion Matrix
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "subsec:confusion-matrix"

\end_inset


\end_layout

\begin_layout Standard
A confusion matrix is a specific table layout that allows visualization
 of the performance of an algorithm, typically a supervised learning one.
 This program directly uses the confusion matrix provided by 
\begin_inset CommandInset citation
LatexCommand citet
key "kernighan1990spelling"
literal "false"

\end_inset

.
 The four confusion matrices are (1) del[x,y], the number of times that
 the characters xy (in the correct word) were typed as x in the training
 set, (2), add[x,y], the number of times that x was typed as xy, (3) sub[x,y],
 the number of times that y was typed as x, and (4) rev[x,y], the number
 of times that xy was typed as yx.
\end_layout

\begin_layout Subsection
Edit Distance Implementation
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "subsec:edit-distance-implementation"

\end_inset


\end_layout

\begin_layout Standard
In this task, the Damerau Levenshtein distance is used to calculate the
 minimum number of operations for a word to be modified to another word.
 The types of operations include insertion, deletion, single-character substitut
ion, and transposition of two adjacent characters.
 After discovering that the edit distance calculation function directly
 implemented in Python (without speeding up tools such as numpy) is inefficient,
 the program uses 
\shape italic
pyxDamerauLevenshtein
\shape default
 package of PyPI to calculate the edit distance.
 It implements algorithm for Python in Cython for high performance, and
 it runs in 
\begin_inset Formula $O(N*M)$
\end_inset

 time using 
\begin_inset Formula $O(M)$
\end_inset

 space.
\end_layout

\begin_layout Section
Experiments
\end_layout

\begin_layout Subsection
Experiment Setup
\end_layout

\begin_layout Standard
In summary, the test data used in this experiment contains a thousand sentences
 selected from the news text, mainly containing non-word errors and containing
 a small number of real word errors.
\end_layout

\begin_layout Standard
The corpus used in this experiment is the Reuters news corpus provided by
 
\shape italic
nltk
\shape default
 package.
 In addition to the Reuters corpus, the Gutenberg and the Brown corpus was
 also tried, but was found to be ineffective in improving the model effectivenes
s.
\end_layout

\begin_layout Subsection
Experiment Result
\end_layout

\begin_layout Standard
In 1000 sentences, if the error type is not distinguished, the total correction
 accuracy is about 62.00%.
 Detailed results can be found in the output file attached to the source
 code repository.
 The program execution takes only a few minutes.
 For most sentences, the correction is instantaneous, and the longer sentence
 correction will not exceed several seconds.
\end_layout

\begin_layout Standard
The GitHub repository address of this task is .
\end_layout

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
bibfiles "references"
options "plain"

\end_inset


\end_layout

\end_body
\end_document
